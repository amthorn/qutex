name: Continuous Integration

on: [push, workflow_dispatch]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 15.14.0
      - uses: actions/checkout@master
      - uses: actions/cache@v2.1.6
        id: save-deps
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
      - name: Install Dependencies
        if: steps.save-deps.outputs.cache-hit != 'true'
        uses: CultureHQ/actions-yarn@master
        with:
          args: --cwd services/bot install
      - name: Check Docker Version
        run: docker version
      - name: Install Latest Docker
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt-get install docker-ce
      - name: Check Docker Version
        run: docker version
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 15.14.0
      - uses: actions/checkout@master
      - uses: actions/cache@v2.1.6
        id: save-deps
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
      - run: ./services/bot/bin/lint.sh
      - uses: CultureHQ/actions-yarn@master
        with:
          args: --cwd services/bot lint
  build-test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Test Docker Container Builds
        run: docker build -t testing:latest services/bot
  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "America/New_York"
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 15.14.0
      - uses: actions/checkout@master
      - uses: actions/cache@v2.1.6
        id: save-deps
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
      - run: |
          mkdir -p secrets/local/
          echo `openssl rand -hex 64` >> secrets/local/mongoPassword
          echo "DOESNTMATTER" >> secrets/local/token
          sudo docker run -v $(pwd)/secrets/local/mongoPassword:/run/secrets/mongoPassword -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_DATABASE=qutex -e MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/mongoPassword --name mongo -d -p 27017:27017 mongo:4.4.5
      - env:
          QUTEX_TESTING: true
        run: yarn --cwd services/bot test --verbose
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella
          fail_ci_if_error: true