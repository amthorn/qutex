{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json"
    },
    "ignorePatterns": [
        "jest.config.js",
        "coverage/*",
        "migrate-mongo-config.js",
        "migrations/*"
    ],
    "env": {
        "es6": true
        // "shared-node-browser": true
    },
    "plugins": [
        "jsdoc"
    ],
    "extends": [
        "plugin:jsdoc/recommended",
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
        // "plugin:prettier/recommended"
    ],
    "rules": {
        "jsdoc/check-examples": 2,
        "jsdoc/check-indentation": 2,
        "jsdoc/check-line-alignment": 2,
        "jsdoc/check-syntax": 2,
        "jsdoc/match-description": 2,
        "jsdoc/no-bad-blocks": 2,
        "jsdoc/no-defaults": 2,
        "jsdoc/no-types": 2,
        "jsdoc/require-description": 2,
        "jsdoc/require-description-complete-sentence": 2,
        "jsdoc/require-example": 0,
        "jsdoc/require-file-overview": 2,
        "jsdoc/require-hyphen-before-param-description": 2,
        "jsdoc/require-throws": 2,
        "jsdoc/require-param-type": 0,
        "jsdoc/require-returns-type": 0,
        "@typescript-eslint/array-type": "warn",
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/class-literal-property-style": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/explicit-member-accessibility": "error",
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/member-delimiter-style": "error",
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/method-signature-style": "warn",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "variableLike",
                "format": [
                    "camelCase"
                ]
            },
            {
                "selector": "variable",
                "types": [
                    "boolean"
                ],
                "format": [
                    "PascalCase"
                ],
                "prefix": [
                    "is",
                    "should",
                    "has",
                    "can",
                    "did",
                    "will",
                    "does"
                ]
            },
            {
                "selector": "variable",
                "modifiers": [
                    "const",
                    "global"
                ],
                "format": [
                    "UPPER_CASE"
                ]
            },
            {
                "selector": "variable",
                "modifiers": [
                    "destructured"
                ],
                "format": null
            },
            {
                "selector": "parameter",
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "memberLike",
                "modifiers": [
                    "private",
                    "public",
                    "protected"
                ],
                "format": [
                    "UPPER_CASE"
                ]
            },
            {
                "selector": "typeLike",
                "format": [
                    "PascalCase"
                ]
            }
        ],
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/prefer-enum-initializers": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/sort-type-union-intersection-members": "warn",
        "@typescript-eslint/type-annotation-spacing": "warn",
        "@typescript-eslint/typedef": "error",
        "@typescript-eslint/brace-style": "warn",
        "@typescript-eslint/comma-dangle": "error",
        "@typescript-eslint/comma-spacing": "error",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/func-call-spacing": "error",
        "@typescript-eslint/indent": "error",
        "@typescript-eslint/init-declarations": "error",
        "@typescript-eslint/no-dupe-class-members": "warn",
        "@typescript-eslint/no-duplicate-imports": "warn",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-extra-parens": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-loss-of-precision": "error",
        "@typescript-eslint/no-magic-numbers": [
            "error",
            {
                "ignore": [
                    -1,
                    0,
                    1,
                    2
                ]
            }
        ],
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/object-curly-spacing": [
            "warn",
            "always"
        ],
        "@typescript-eslint/quotes": [
            "warn",
            "single"
        ],
        "@typescript-eslint/semi": "error",
        "@typescript-eslint/space-before-function-paren": "warn",
        "@typescript-eslint/space-infix-ops": "warn",
        "@typescript-eslint/triple-slash-reference": "off"
    }
}